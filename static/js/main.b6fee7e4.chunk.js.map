{"version":3,"sources":["App.js","index.js"],"names":["App","useState","p1Rating","setP1Rating","p2Rating","setP2Rating","p1Probability","setP1Probability","p2Probability","setP2Probability","p1Win","setP1Win","p2Win","setP2Win","p1Loss","setP1Loss","p2Loss","setP2Loss","probability","r1","r2","Math","pow","calculateElorating","winner","pa","pb","floor","prev","useEffect","round","toFixed","className","style","maxWidth","margin","display","flexDirection","onClick","Swal","fire","title","icon","input","inputOptions","then","result","value","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6fee7e4.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './w3.css'\nimport Swal from 'sweetalert2';\nimport './style.css'\n\n\nfunction App() {\n  const [p1Rating,setP1Rating] = useState(1500);\n  const [p2Rating,setP2Rating] = useState(1500);\n  const [p1Probability,setP1Probability] = useState('null');\n  const [p2Probability,setP2Probability] = useState('null');\n  const [p1Win, setP1Win] = useState(0);\n  const [p2Win, setP2Win] = useState(0);\n  const [p1Loss, setP1Loss] = useState(0);\n  const [p2Loss, setP2Loss] = useState(0);\n\n  const k = 32;\n\n  const probability = (r1,r2) =>{\n    return 1/(1+Math.pow(10,(r1-r2)/400));\n  }\n  const checkWin = () =>{\n    Swal.fire({\n      title:\"Select winner\",\n      icon:'question',\n      input:'radio',\n      inputOptions:{\n        '1':'player 1 win',\n        '2':'Player 2 win'\n      }\n    }).then(result=>{\n      if(result.value){\n        calculateElorating(result.value);\n      }\n    })\n  }\n  const calculateElorating = (winner)=>{\n    var pa = probability(p2Rating,p1Rating);\n    var pb = probability(p1Rating,p2Rating);\n    \n    if(winner==='1'){\n        let r1 = Math.floor(p1Rating+k*(1-pa));\n        let r2 = Math.floor(p2Rating+k*(0-pb));\n        setP1Rating(r1);\n        setP2Rating(r2);\n        setP1Win(prev=>prev+1)\n        setP2Loss(prev=>prev+1);\n    }else if(winner==='2'){\n      let r1 = Math.floor(p1Rating+k*(0-pa));\n      let r2 = Math.floor(p2Rating+k*(1-pb));\n      setP1Rating(r1);\n      setP2Rating(r2);\n      setP2Win(prev=>prev+1)\n      setP1Loss(prev=>prev+1);\n      \n    }\n    \n  }\n\n  const reset = () =>{\n    setP1Rating(1500)\n    setP2Rating(1500)\n    setP1Win(0)\n    setP2Win(0)\n    setP1Loss(0)\n    setP2Loss(0)\n  }\n\n  useEffect(()=>{\n    setP1Probability(Math.round(probability(p2Rating,p1Rating).toFixed(3)*100))\n    setP2Probability(Math.round(probability(p1Rating,p2Rating).toFixed(3)*100));\n  },[p1Rating,p2Rating])\n  return (\n      <div className=\"animate__animated animate__bounce w3-container w3-card-2 w3-round-xlarge w3-center w3-white w3-margin-top  w3-padding-24\" style={{maxWidth:'800px',margin:'auto'}}>\n        <h1>Elo Rating Demo</h1>\n        <div className=\"w3-container w3-row-padding w3-padding-large w3-center w3-large\" style={{display:'flex'}}>\n          \n          <div className=\" w3-col  w3-margin-bottom\" style={{display:'flex',flexDirection:\"column\"}}>\n            <ul className=\"w3-ul \">\n              <li className=\"w3-red w3-round-xlarge \" >Player 1</li>\n              <li className=\"w3-border-bottom\"> Rating - {p1Rating} </li> \n              <li className=\"w3-border-bottom\"> Win probability - {p1Probability}%</li>\n              <li className=\"w3-border-bottom\"> Win - {p1Win}</li>\n              <li className=\"w3-border-bottom\">Loss - {p1Loss}</li>\n            </ul>\n            \n          </div>\n          <div className=\"w3-col w3-margin-bottom\" style={{display:'flex',flexDirection:\"column\"}}>\n            <ul className=\"w3-ul\">\n              <li className=\"w3-red w3-round-xlarge\">Player 2</li>\n              <li className=\"w3-border-bottom\"> Rating - {p2Rating} </li> \n              <li className=\"w3-border-bottom\"> Win probability - {p2Probability}%</li>\n              <li className=\"w3-border-bottom\"> Win - {p2Win}</li>\n              <li className=\"w3-border-bottom\">Loss - {p2Loss}</li>\n            </ul>\n          </div>\n        </div>\n        \n        <button \n        className=\"w3-button w3-margin-right w3-ripple w3-card w3-hover-dark-red w3-round-xlarge w3-red w3-medium\" \n        onClick={checkWin}>Calculate Elorating</button>\n        <button \n        className=\"w3-button w3-ripple w3-card w3-hover-dark-red w3-round-xlarge w3-red w3-medium\" \n        onClick={reset}>Reset</button>\n\n        <div className=\"w3-container w3-padding-24 w3-round-xlarge w3-red w3-margin-top\" style={{textAlign:\"left\"}}>\n          <p>Constant K = 32</p>\n          <p>probability(p1,p2) = 1/(1+Math.pow(10,(rating1-rating2)/100))</p>\n          <p>pa = probability(r2,r1) - probability of player 1</p>\n          <p>pb = probability(r1,r2) - probability of player 1</p>\n          <p>if player 1 wins -<br/> \n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r1 = Math.floor(p1Rating+k*(1-pa)) - new rating of player 1<br/>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r2 = Math.floor(p2Rating+k*(0-pb)) - new rating of player 2\n          </p>\n          <p>if player 2 wins -<br/> \n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r1 = Math.floor(p1Rating+k*(0-pa)) - new rating of player 1<br/>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r2 = Math.floor(p2Rating+k*(1-pb)) - new rating of player 2\n          </p>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}